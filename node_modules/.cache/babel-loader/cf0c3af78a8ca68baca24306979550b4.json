{"ast":null,"code":"import React from'react';import{MDBBtn,MDBCard,MDBCardBody,MDBCardImage,MDBCardTitle,MDBCardText,MDBCol,MDBContainer,MDBRow}from'mdbreact';import dineImg from'../../images/DineInDineOut.jpg';import weatherImg from'../../images/WeatherDashboard.png';import workDayImg from'../../images/WorkDayScheduler.png';import burgerImg from'../../images/eatdaburger.jpg';import dasImg from'../../images/dasFlix.jpg';import workOutImg from'../../images/FitnessTracker.gif';import'./Portfolio.css';const projects=[{\"id\":1,\"name\":\"Dine-In or Dine-Out\",\"image\":dineImg,\"description\":\"Project where the user can input a type of meal and their zip code and then receive results of recipes or restaurants that serve the meal near them.\",\"gihub\":\"https://github.com/denzgrant/SnapesOnAPlane\",\"url\":\"https://denzgrant.github.io/SnapesOnAPlane/\"},{\"id\":2,\"name\":\"Weather Dashboard\",\"image\":weatherImg,\"description\":\"Weather Dashboard uses API calls to get the current and 5-Day forecast for any location by typing in the citie's name.\",\"gihub\":\"https://github.com/denzgrant/Weather-Dashboard\",\"url\":\"https://denzgrant.github.io/Weather-Dashboard/\"},{\"id\":3,\"name\":\"Work Day Scheduler\",\"image\":workDayImg,\"description\":\"Allows the user to saves tasks and highlight future work hours. Tasks are saved in local storage and moment.js is used to highlight the hour of the day block.\",\"gihub\":\"https://github.com/denzgrant/Work-Day-Scheduler\",\"url\":\"https://denzgrant.github.io/Work-Day-Scheduler/\"},{\"id\":4,\"name\":\"Eat-Da-Burger\",\"image\":burgerImg,\"description\":\"Eat-Da-Burger! is a restaurant app that lets users input the name of burgers they'd like to eat mad with Express and MySQL. This project follows the MVC design.\",\"gihub\":\"https://github.com/denzgrant/Eat-Da-Burger-\",\"url\":\"https://drg-eat-da-burger.herokuapp.com/\"},{\"id\":5,\"name\":\"DasFlix\",\"image\":dasImg,\"description\":\"A full-stack application where the user can create watchlists consisting of cards representing movies/tv shows, these cards are rendered to the page from a third party API. Local username and password authentication is used to access the website. The user’s watchlist, password, and username is stored in a database. Feel free to use the test login, username: '1@1'. password: '1'\",\"gihub\":\"https://github.com/denzgrant/DasFlix-\",\"url\":\"http://www.dasflix.com/\"},{\"id\":6,\"name\":\"Workout Tracker\",\"image\":workOutImg,\"description\":\"Workout Tracker application that utilizes Mongoose to allow the user to add new exercises to a new workout plan or add exercises to a previous workout plan. A stats page is rendered based on the multiples exercises created.\",\"gihub\":\"https://github.com/denzgrant/Workout-Tracker\",\"url\":\"http://lower-goose-19055.herokuapp.com/\"}];const Portfolio=()=>{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MDBContainer,null,/*#__PURE__*/React.createElement(MDBRow,null,projects.map((proj,index)=>/*#__PURE__*/React.createElement(MDBCol,{key:index,sm:\"6\",md:\"6\"},/*#__PURE__*/React.createElement(MDBCard,{style:{width:\"22rem\",marginTop:\"4em\"}},/*#__PURE__*/React.createElement(MDBCardImage,{className:\"img-fluid\",src:proj.image,waves:true}),/*#__PURE__*/React.createElement(MDBCardBody,null,/*#__PURE__*/React.createElement(MDBCardTitle,null,proj.name),/*#__PURE__*/React.createElement(MDBCardText,null,proj.description),/*#__PURE__*/React.createElement(MDBBtn,{href:proj.gihub,target:\"_blank\"},\"Github\"),/*#__PURE__*/React.createElement(MDBBtn,{href:proj.url,target:\"_blank\"},\"Demo\"))))))));};export default Portfolio;","map":{"version":3,"sources":["C:/Users/owner/Desktop/BootCamp/React Portfolio/react_portfolio/src/components/Portfolio/Portfolio.js"],"names":["React","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","dineImg","weatherImg","workDayImg","burgerImg","dasImg","workOutImg","projects","Portfolio","map","proj","index","width","marginTop","image","name","description","gihub","url"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,WAA1B,CAAuCC,YAAvC,CAAqDC,YAArD,CAAmEC,WAAnE,CAAgFC,MAAhF,CAAwFC,YAAxF,CAAsGC,MAAtG,KAAoH,UAApH,CACA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,MAAO,iBAAP,CAKA,KAAMC,CAAAA,QAAQ,CAAG,CACf,CACE,KAAM,CADR,CAEE,OAAQ,qBAFV,CAGE,QAASN,OAHX,CAIE,cAAe,sJAJjB,CAKE,QAAS,6CALX,CAME,MAAO,6CANT,CADe,CASf,CACE,KAAM,CADR,CAEE,OAAQ,mBAFV,CAGE,QAASC,UAHX,CAIE,cAAe,wHAJjB,CAKE,QAAS,gDALX,CAME,MAAO,gDANT,CATe,CAiBf,CACE,KAAM,CADR,CAEE,OAAQ,oBAFV,CAGE,QAASC,UAHX,CAIE,cAAe,gKAJjB,CAKE,QAAS,iDALX,CAME,MAAO,iDANT,CAjBe,CAyBf,CACE,KAAM,CADR,CAEE,OAAQ,eAFV,CAGE,QAASC,SAHX,CAIE,cAAe,kKAJjB,CAKE,QAAS,6CALX,CAME,MAAO,0CANT,CAzBe,CAiCf,CACE,KAAM,CADR,CAEE,OAAQ,SAFV,CAGE,QAASC,MAHX,CAIE,cAAe,8XAJjB,CAKE,QAAS,uCALX,CAME,MAAO,yBANT,CAjCe,CAyCf,CACE,KAAM,CADR,CAEE,OAAQ,iBAFV,CAGE,QAASC,UAHX,CAIE,cAAe,iOAJjB,CAKE,QAAS,8CALX,CAME,MAAO,yCANT,CAzCe,CAAjB,CAqDA,KAAME,CAAAA,SAAS,CAAG,IAAM,CACtB,mBACE,qDACE,oBAAC,YAAD,mBACE,oBAAC,MAAD,MACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,IAAD,CAAOC,KAAP,gBACZ,oBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAb,CAAoB,EAAE,CAAC,GAAvB,CAA2B,EAAE,CAAC,GAA9B,eACE,oBAAC,OAAD,EAAS,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,SAAS,CAAE,KAA7B,CAAhB,eACE,oBAAC,YAAD,EAAc,SAAS,CAAC,WAAxB,CAAoC,GAAG,CAAEH,IAAI,CAACI,KAA9C,CAAqD,KAAK,KAA1D,EADF,cAEE,oBAAC,WAAD,mBACE,oBAAC,YAAD,MAAeJ,IAAI,CAACK,IAApB,CADF,cAEE,oBAAC,WAAD,MACGL,IAAI,CAACM,WADR,CAFF,cAKE,oBAAC,MAAD,EAAQ,IAAI,CAAEN,IAAI,CAACO,KAAnB,CAA0B,MAAM,CAAC,QAAjC,WALF,cAME,oBAAC,MAAD,EAAQ,IAAI,CAAEP,IAAI,CAACQ,GAAnB,CAAyB,MAAM,CAAC,QAAhC,SANF,CAFF,CADF,CADD,CADH,CADF,CADF,CADF,CAuBD,CAxBD,CA0BA,cAAeV,CAAAA,SAAf","sourcesContent":["import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport dineImg from '../../images/DineInDineOut.jpg';\r\nimport weatherImg from '../../images/WeatherDashboard.png';\r\nimport workDayImg from '../../images/WorkDayScheduler.png';\r\nimport burgerImg from '../../images/eatdaburger.jpg';\r\nimport dasImg from '../../images/dasFlix.jpg';\r\nimport workOutImg from '../../images/FitnessTracker.gif';\r\nimport './Portfolio.css'\r\n\r\n\r\n\r\n\r\nconst projects = [\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Dine-In or Dine-Out\",\r\n    \"image\": dineImg,\r\n    \"description\": \"Project where the user can input a type of meal and their zip code and then receive results of recipes or restaurants that serve the meal near them.\",\r\n    \"gihub\": \"https://github.com/denzgrant/SnapesOnAPlane\",\r\n    \"url\": \"https://denzgrant.github.io/SnapesOnAPlane/\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Weather Dashboard\",\r\n    \"image\": weatherImg,\r\n    \"description\": \"Weather Dashboard uses API calls to get the current and 5-Day forecast for any location by typing in the citie's name.\",\r\n    \"gihub\": \"https://github.com/denzgrant/Weather-Dashboard\",\r\n    \"url\": \"https://denzgrant.github.io/Weather-Dashboard/\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Work Day Scheduler\",\r\n    \"image\": workDayImg,\r\n    \"description\": \"Allows the user to saves tasks and highlight future work hours. Tasks are saved in local storage and moment.js is used to highlight the hour of the day block.\",\r\n    \"gihub\": \"https://github.com/denzgrant/Work-Day-Scheduler\",\r\n    \"url\": \"https://denzgrant.github.io/Work-Day-Scheduler/\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Eat-Da-Burger\",\r\n    \"image\": burgerImg,\r\n    \"description\": \"Eat-Da-Burger! is a restaurant app that lets users input the name of burgers they'd like to eat mad with Express and MySQL. This project follows the MVC design.\",\r\n    \"gihub\": \"https://github.com/denzgrant/Eat-Da-Burger-\",\r\n    \"url\": \"https://drg-eat-da-burger.herokuapp.com/\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"DasFlix\",\r\n    \"image\": dasImg,\r\n    \"description\": \"A full-stack application where the user can create watchlists consisting of cards representing movies/tv shows, these cards are rendered to the page from a third party API. Local username and password authentication is used to access the website. The user’s watchlist, password, and username is stored in a database. Feel free to use the test login, username: '1@1'. password: '1'\",\r\n    \"gihub\": \"https://github.com/denzgrant/DasFlix-\",\r\n    \"url\": \"http://www.dasflix.com/\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"Workout Tracker\",\r\n    \"image\": workOutImg,\r\n    \"description\": \"Workout Tracker application that utilizes Mongoose to allow the user to add new exercises to a new workout plan or add exercises to a previous workout plan. A stats page is rendered based on the multiples exercises created.\",\r\n    \"gihub\": \"https://github.com/denzgrant/Workout-Tracker\",\r\n    \"url\": \"http://lower-goose-19055.herokuapp.com/\"\r\n  }\r\n]\r\n\r\n\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <>\r\n      <MDBContainer >\r\n        <MDBRow>\r\n          {projects.map((proj, index) => (\r\n            <MDBCol key={index} sm=\"6\" md=\"6\">\r\n              <MDBCard style={{ width: \"22rem\", marginTop: \"4em\" }}>\r\n                <MDBCardImage className=\"img-fluid\" src={proj.image} waves />\r\n                <MDBCardBody>\r\n                  <MDBCardTitle>{proj.name}</MDBCardTitle>\r\n                  <MDBCardText>\r\n                    {proj.description}\r\n                  </MDBCardText>\r\n                  <MDBBtn href={proj.gihub} target=\"_blank\">Github</MDBBtn>\r\n                  <MDBBtn href={proj.url}  target=\"_blank\">Demo</MDBBtn>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          ))}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}